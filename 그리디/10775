# 공항

import sys
input = sys.stdin.readline

def find_parent(parent,x): # 루트 노드를 찾기 위한 find 연산
    if parent[x] != x:
        parent[x] = find_parent(parent, parent[x])
    return parent[x]

def union_parent(parent, a, b): # 합치기 연산
    a = find_parent(parent, a)
    b = find_parent(parent, b)
    if a < b:
        parent[b] = a
    else:
        parent[a] = b

g = int(input()) # 게이트 수
p = int(input()) # 비행기 수
 
parent = [0] * (g+1) # 부모노드 테이블
for i in range(1, len(parent)): # 각 부모노드의 테이블 값을 자기자신으로 초기화
    parent[i] = i
  
array =[]
for i in range(p): # 도킹해야하는 게이트 번호를 리스트에 할당
    array.append(int(input()))
count = 0

for i in array: # 각 비행기 마다 루트 노드를 찾고, 루트노드가 0을 가르키면 break
    v = find_parent(parent,i)
    if v!=0:
      count += 1
      union_parent(parent, v, v-1)
    else:
      break

print(count)

# 게이트 4번의 비행기가 들어와서 4번에 도킹하면, 다음의 게이트 4번의 비행기를 3번에 도킹시켜야 하므로 합치기 연산 사용.
