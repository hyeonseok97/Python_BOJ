# 경로 찾기

INF = int(1e9)

n = int(input()) # 노드의 갯수 n 입력
graph = [[INF]*(n+1) for _ in range(n+1)] # 2차원 리스트 생성
count =1
# 입력받은 값을 통해 2차원 리스트 초기화
for i in range(1, n+1):
    test = list(map(int,input().split()))
    for j in range(len(test)):
        if test[j] == 1:
            graph[i][j+1] = 1
          

# 3중 반복문을 기반으로 플로이드 워셜 알고리즘 구현
for k in range(1, n+1):
    for i in range(1, n+1):
        for j in range(1, n+1):
            graph[i][j] = min(graph[i][j], graph[i][k]+graph[k][j])

for a in range(1, n+1):
    for b in range(1, n+1):
        if graph[a][b] ==INF:
            print(0, end=' ')
        else:
            print(1, end=' ')
    print()

