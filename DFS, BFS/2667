n = int(input()) # 지도의 크기 n을 입력

# 지도 이차원 리스트 선언한 후, n번 반복하여 지도를 입력받음
array = []
for _ in range(n):
  array.append(list(map(int,input())))

count = 0

# dfs 알고르즘을 통해 단지의 수, 단지별 아파트 수 계산
def dfs(x, y):
  global count
  if x<0 or x>n-1 or y<0 or y>n-1:
    return False
  if array[x][y] == 0:
    return False
  if array[x][y] == 1:
    array[x][y] = 0
    count += 1
    dfs(x-1, y)
    dfs(x+1, y)
    dfs(x, y-1)
    dfs(x, y+1)
    return True

result = 0
number = []
result_number = []

for i in range(n):
  for j in range(n):
    if dfs(i, j) == True:
      result += 1
      number.append(count)
      count = 0

number.sort()

print(result)
for i in range(len(number)):
  print(number[i])
