import sys
sys.setrecursionlimit(10000)

n, m = map(int, input().split())

data = [] # 현재 맵 리스트
temp = [[0]*m for _ in range(n)] # 벽을 모두 설치한 후 맵 리스트

dx = [-1, 1, 0, 0]
dy = [0, 0, 1, -1]

for _ in range(n):
  data.append(list(map(int, input().split())))

def virus(x, y):
  for i in range(4):
    nx = x + dx[i]
    ny = y + dy[i]
    if nx >= 0 and ny >= 0 and nx <= n-1 and ny <= m-1:
      if temp[nx][ny] == 0:
        temp[nx][ny] = 2
        virus(nx, ny)

def get_score():
  count = 0
  for i in range(n):
    for j in range(m):
      if temp[i][j] == 0:
        count += 1
  return count

result = 0 

def dfs(count):
  global result
  
  if count == 3:
    for i in range(n):
      for j in range(m):
        temp[i][j] = data[i][j]

    for i in range(n):
      for j in range(m):
        if temp[i][j] == 2:
          virus(i, j)

    result = max(result, get_score())

  else:
    for i in range(n):
      for j in range(m):
        if data[i][j] == 0:
          data[i][j] = 1
          count += 1
          dfs(count)
          data[i][j] = 0
          count -= 1

dfs(0)

print(result)
