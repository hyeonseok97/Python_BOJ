# 최소비용 구하기

import heapq
import sys
input = sys.stdin.readline
INF = int(1e9)

n = int(input()) # 도시(노드)의 개수 입력
m = int(input()) # 버스(간선)의 개수 입력
graph = [[] for _ in range(n+1)]
distance = [INF] * (n+1)

# 그래프 정보 입력 --> a 도시에서 b 도시로 가는 데 비용이 c 순으로
for _ in range(m):
    a, b, c = map(int, input().split())
    graph[a].append((b,c))

# 출발 도시와 도착 도시의 번호가 입력
start, end = map(int, input().split())

def dijkstra(start):
    q = []
    distance[start] = 0
    heapq.heappush(q, (0,start))
    while q:
        dist, now = heapq.heappop(q)
        if distance[now] < dist:
            continue
        for i in graph[now]:
            cost = dist + i[1]
            if cost < distance[i[0]]:
                distance[i[0]] = cost
                heapq.heappush(q, (cost, i[0]))

dijkstra(start)

print(distance[end])
