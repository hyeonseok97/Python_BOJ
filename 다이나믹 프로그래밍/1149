# RGB 거리

n = int(input()) # 집의 수 n 을 입력

array = [] # 각 집의 rgb 비용을 담기 위한 리스트
for i in range(n):
    array.append(list(map(int,input().split())))

# 비용의 최솟값을 담기 위한 dp 테이블 초기화
dp = [[0,0,0] for _ in range(1000)]
dp[0] = array[0]

# 보텀업 방식을 통해 다이나믹 프로그래밍을 구현
for i in range(1,n):
    dp[i][0] = min(array[i][0]+dp[i-1][1], array[i][0] + dp[i-1][2])
    dp[i][1] = min(array[i][1]+dp[i-1][0], array[i][1] + dp[i-1][2])
    dp[i][2] = min(array[i][2]+dp[i-1][0], array[i][2] + dp[i-1][1])

print(min(dp[n-1]))
